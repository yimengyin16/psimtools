// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_hello
List rcpp_hello();
RcppExport SEXP _psimtools_rcpp_hello() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello());
    return rcpp_result_gen;
END_RCPP
}
// fnC
NumericVector fnC(NumericVector balance, NumericVector C, NumericVector r);
RcppExport SEXP _psimtools_fnC(SEXP balanceSEXP, SEXP CSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type balance(balanceSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type C(CSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(fnC(balance, C, r));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_psimtools_rcpp_hello", (DL_FUNC) &_psimtools_rcpp_hello, 0},
    {"_psimtools_fnC", (DL_FUNC) &_psimtools_fnC, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_psimtools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
